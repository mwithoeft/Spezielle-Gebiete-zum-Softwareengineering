{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/large-files/large-files.component.ts","./src/app/large-files/large-files.component.html","./src/app/services/communication.service.ts","./src/app/services/websocket.service.ts","./src/app/services/webtransport.service.ts","./src/environments/environment.websocket.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  title = 'communication-protocols';\n\n  constructor(private primengConfig: PrimeNGConfig) {\n\n  }\n\n  ngOnInit(): void {\n    this.primengConfig.ripple = true;\n  }\n\n\n\n}\n\n","\n\n<app-large-files></app-large-files>\n\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommunicationService } from './services/communication.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { WebtransportService } from './services/webtransport.service';\nimport { LargeFilesComponent } from './large-files/large-files.component';\n\nconst config: SocketIoConfig = { url: 'http://websocket.withoeft.nz:4444', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LargeFilesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SocketIoModule.forRoot(config)\n  ],\n  providers: [CommunicationService, WebsocketService, WebtransportService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CommunicationService } from '../services/communication.service';\n\n@Component({\n  selector: 'app-large-files',\n  templateUrl: './large-files.component.html',\n  styleUrls: ['./large-files.component.less']\n})\nexport class LargeFilesComponent implements OnInit {\n\n  files: any[] = [];\n\n  constructor(private communicationsService: CommunicationService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<h1>Gro√üe Dateien zum Download:</h1>\n\n<ul>\n    <li *ngFor=\"let file of files\">\n    </li>\n</ul>","import { Injectable } from '@angular/core';\nimport { Injector } from '@angular/core'  \nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { WebsocketService } from './websocket.service';\nimport { WebtransportService } from './webtransport.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommunicationService {\n\n  protocolService! : WebsocketService | WebtransportService;\n\n  constructor(private injector: Injector) {\n    if (environment.websocket) {\n      this.protocolService = <WebsocketService>this.injector.get(WebsocketService);\n    } else {\n      this.protocolService = <WebtransportService>this.injector.get(WebtransportService);\n    }\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  constructor(private socket: Socket) {\n    console.log(\"Using WebSocketService\");\n\n    this.socket.connect();\n    this.listenToMessage();\n    this.sendMessage(\"Hello from the client\");\n    this.requestFiles();\n  }\n\n\n  public sendMessage(message: string) {\n    this.socket.emit('message', message);\n  }\n\n  private listenToMessage() {\n    this.socket.on('message', (message: string) => {\n      console.log(\"Received message via websocket: \" + message);\n    });\n  }\n\n  public requestFiles() {\n    this.socket.emit('download-files-list');\n    this.socket.on('download-files-list', (message: string[]) => {\n      console.log(message);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var WebTransport: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebtransportService {\n\n  readonly url = 'https://webtransport.withoeft.nz:4433/';\n\n  transport: any;\n\n  constructor() {\n    console.log(\"Using WebTransportService\");\n    this.connect();\n  }\n\n  async connect() {\n    try {\n      this.transport = new WebTransport(this.url);\n      console.log('Initiating connection...');\n    } catch (e) {\n      console.error('Failed to create connection object. ' + e, 'error');\n      return;\n    }\n\n    try {\n      await this.transport.ready;\n      console.log('Connection ready.');\n    } catch (e) {\n      console.error('Connection failed. ' + e, 'error');\n      return;\n    }\n\n    this.transport.closed\n      .then(() => {\n        console.log('Connection closed normally.');\n      })\n      .catch(() => {\n        console.error('Connection closed abruptly.', 'error');\n      });\n\n      this.send('download-files-list');\n  }\n\n  async send(message: string) {\n    let encoder = new TextEncoder();\n    let data = encoder.encode(message);\n    let stream = await this.transport.createBidirectionalStream();\n    this.readFromIncomingStream(stream);\n\n    let writer = stream.writable.getWriter();\n    await writer.write(data);\n    await writer.close();\n  }\n\n  async readFromIncomingStream(stream: any) {\n    let decoder = new TextDecoder();\n    let reader = stream.readable.getReader();\n    try {\n      while (true) {\n        const { value, done } = await reader.read();\n        if (done) {\n          console.log('Stream #' + ' closed');\n          return;\n        }\n        let data = decoder.decode(value);\n        console.log('Received data on stream #' + ': ' + data);\n      }\n    } catch (e) {\n      console.error('Error while reading from stream #' + ': ' + e, 'error');\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  websocket: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["WebtransportService","constructor","console","log","connect","transport","WebTransport","url","e","error","ready","closed","then","catch","send","message","encoder","TextEncoder","data","encode","stream","createBidirectionalStream","readFromIncomingStream","writer","writable","getWriter","write","close","decoder","TextDecoder","reader","readable","getReader","value","done","read","decode","factory","providedIn"],"sourceRoot":"webpack:///"}